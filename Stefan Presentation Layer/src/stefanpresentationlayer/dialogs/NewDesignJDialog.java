/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewDesignJDialog.java
 *
 * Created on 04.02.2012., 17:40:00
 */
package stefanpresentationlayer.dialogs;

import java.awt.CardLayout;
import java.awt.Component;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.jdesktop.application.Action;
import stefan.business.DesignManager;
import stefan.business.MaterialManager;
import stefan.business.objects.Design;
import stefan.business.objects.Material;

/**
 *
 * @author Robert
 */
public class NewDesignJDialog extends javax.swing.JDialog {

    List<Material> materials = new ArrayList<stefan.business.objects.Material>();
    List<JTextField> fields = new ArrayList<JTextField>();
    List<Double> calculatedResults = new ArrayList<Double>();
    List<Double> calculatedResultsSum = new ArrayList<Double>();
    DecimalFormat weightFormatter = new DecimalFormat("#0.###");
    DecimalFormat priceFormatter = new DecimalFormat("#0.##");
    Material selectedMaterial;

    /** Creates new form NewDesignJDialog */
    public NewDesignJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        designDateInput.setDate(new Date());
        resultsPanel.setVisible(false);
        MaterialManager manager = new MaterialManager();
        materials = manager.GetAll();
        this.firePropertyChange("materials", null, null);
        setTitle("Novi Nacrt");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        cardMainPanel = new javax.swing.JPanel();
        card2Panel = new javax.swing.JPanel();
        card2PresjekInput = new javax.swing.JTextField();
        card2DuljinaInput = new javax.swing.JTextField();
        card2CalculateBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        card3Panel = new javax.swing.JPanel();
        card3PresjekDInput = new javax.swing.JTextField();
        card3DuljinaInput = new javax.swing.JTextField();
        card3PresjekdInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        card3CalculateBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        card4Panel = new javax.swing.JPanel();
        card4CalculateBtn = new javax.swing.JButton();
        card4PresjekInput = new javax.swing.JTextField();
        card4DuljinaInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        card5Panel = new javax.swing.JPanel();
        card5CalculateBtn = new javax.swing.JButton();
        card5PresjekAInput = new javax.swing.JTextField();
        card5DuljinaInput = new javax.swing.JTextField();
        card5PresjekBInput = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        designNumberInput = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        designNameInput = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        designIdInput = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        designClassInput = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        selectedMaterialComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        materialPriceLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        materialDensityLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        calculateFieldOdabraniOblikName = new javax.swing.JLabel();
        resultCijenaLabel = new javax.swing.JLabel();
        resultTezinaLabel = new javax.swing.JLabel();
        resultsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        resultWorkPriceInput = new javax.swing.JTextField();
        restultMaterialPriceInput = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        povecanjeCijene = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        comboBoxMaterialRenderer1 = new stefanpresentationlayer.ComboBoxMaterialRenderer();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        designDateInput = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        cardMainPanel.setName("cardMainPanel"); // NOI18N
        cardMainPanel.setLayout(new java.awt.CardLayout());

        card2Panel.setName("card2Panel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stefanpresentationlayer.StefanPresentationLayerApp.class).getContext().getResourceMap(NewDesignJDialog.class);
        card2PresjekInput.setText(resourceMap.getString("card2PresjekInput.text")); // NOI18N
        card2PresjekInput.setName("card2PresjekInput"); // NOI18N
        card2PresjekInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card2PresjekInputKeyTyped(evt);
            }
        });

        card2DuljinaInput.setText(resourceMap.getString("card2DuljinaInput.text")); // NOI18N
        card2DuljinaInput.setName("card2DuljinaInput"); // NOI18N
        card2DuljinaInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card2DuljinaInputKeyTyped(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(stefanpresentationlayer.StefanPresentationLayerApp.class).getContext().getActionMap(NewDesignJDialog.class, this);
        card2CalculateBtn.setAction(actionMap.get("IzracunajOkruglo")); // NOI18N
        card2CalculateBtn.setText(resourceMap.getString("card2CalculateBtn.text")); // NOI18N
        card2CalculateBtn.setName("card2CalculateBtn"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout card2PanelLayout = new javax.swing.GroupLayout(card2Panel);
        card2Panel.setLayout(card2PanelLayout);
        card2PanelLayout.setHorizontalGroup(
            card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2PanelLayout.createSequentialGroup()
                .addGroup(card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card2PanelLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(card2PresjekInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card2DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(card2CalculateBtn))
                    .addGroup(card2PanelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel4)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        card2PanelLayout.setVerticalGroup(
            card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card2PanelLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(card2DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card2PresjekInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card2CalculateBtn))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        cardMainPanel.add(card2Panel, "card2");

        card3Panel.setName("card3Panel"); // NOI18N

        card3PresjekDInput.setText(resourceMap.getString("card3PresjekDInput.text")); // NOI18N
        card3PresjekDInput.setName("card3PresjekDInput"); // NOI18N
        card3PresjekDInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card3PresjekDInputKeyTyped(evt);
            }
        });

        card3DuljinaInput.setText(resourceMap.getString("card3DuljinaInput.text")); // NOI18N
        card3DuljinaInput.setName("card3DuljinaInput"); // NOI18N
        card3DuljinaInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card3DuljinaInputKeyTyped(evt);
            }
        });

        card3PresjekdInput.setText(resourceMap.getString("card3PresjekdInput.text")); // NOI18N
        card3PresjekdInput.setName("card3PresjekdInput"); // NOI18N
        card3PresjekdInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card3PresjekdInputKeyTyped(evt);
            }
        });

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        card3CalculateBtn.setAction(actionMap.get("IzracunajCijev")); // NOI18N
        card3CalculateBtn.setText(resourceMap.getString("card3CalculateBtn.text")); // NOI18N
        card3CalculateBtn.setName("card3CalculateBtn"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        javax.swing.GroupLayout card3PanelLayout = new javax.swing.GroupLayout(card3Panel);
        card3Panel.setLayout(card3PanelLayout);
        card3PanelLayout.setHorizontalGroup(
            card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3PanelLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(card3PanelLayout.createSequentialGroup()
                        .addGroup(card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(card3PresjekdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card3PresjekDInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card3DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card3CalculateBtn)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        card3PanelLayout.setVerticalGroup(
            card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card3PanelLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(card3CalculateBtn)
                    .addComponent(card3DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card3PresjekDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(card3PresjekdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cardMainPanel.add(card3Panel, "card3");

        card4Panel.setName("card4Panel"); // NOI18N

        card4CalculateBtn.setAction(actionMap.get("IzracunajSesterokut")); // NOI18N
        card4CalculateBtn.setText(resourceMap.getString("card4CalculateBtn.text")); // NOI18N
        card4CalculateBtn.setName("card4CalculateBtn"); // NOI18N

        card4PresjekInput.setText(resourceMap.getString("card4PresjekInput.text")); // NOI18N
        card4PresjekInput.setName("card4PresjekInput"); // NOI18N
        card4PresjekInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card4PresjekInputKeyTyped(evt);
            }
        });

        card4DuljinaInput.setText(resourceMap.getString("card4DuljinaInput.text")); // NOI18N
        card4DuljinaInput.setName("card4DuljinaInput"); // NOI18N
        card4DuljinaInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card4DuljinaInputKeyTyped(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel11.setFont(resourceMap.getFont("jLabel11.font")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        javax.swing.GroupLayout card4PanelLayout = new javax.swing.GroupLayout(card4Panel);
        card4Panel.setLayout(card4PanelLayout);
        card4PanelLayout.setHorizontalGroup(
            card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card4PanelLayout.createSequentialGroup()
                .addGroup(card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card4PanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel11))
                    .addGroup(card4PanelLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(card4PresjekInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card4DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(card4CalculateBtn)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        card4PanelLayout.setVerticalGroup(
            card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card4PanelLayout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(card4PresjekInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(card4DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card4CalculateBtn))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        cardMainPanel.add(card4Panel, "card4");

        card5Panel.setName("card5Panel"); // NOI18N

        card5CalculateBtn.setAction(actionMap.get("IzracunajCetverokut")); // NOI18N
        card5CalculateBtn.setText(resourceMap.getString("card5CalculateBtn.text")); // NOI18N
        card5CalculateBtn.setName("card5CalculateBtn"); // NOI18N

        card5PresjekAInput.setText(resourceMap.getString("card5PresjekAInput.text")); // NOI18N
        card5PresjekAInput.setName("card5PresjekAInput"); // NOI18N
        card5PresjekAInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card5PresjekAInputKeyTyped(evt);
            }
        });

        card5DuljinaInput.setText(resourceMap.getString("card5DuljinaInput.text")); // NOI18N
        card5DuljinaInput.setName("card5DuljinaInput"); // NOI18N
        card5DuljinaInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card5DuljinaInputKeyTyped(evt);
            }
        });

        card5PresjekBInput.setText(resourceMap.getString("card5PresjekBInput.text")); // NOI18N
        card5PresjekBInput.setName("card5PresjekBInput"); // NOI18N
        card5PresjekBInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card5PresjekBInputKeyTyped(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        javax.swing.GroupLayout card5PanelLayout = new javax.swing.GroupLayout(card5Panel);
        card5Panel.setLayout(card5PanelLayout);
        card5PanelLayout.setHorizontalGroup(
            card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card5PanelLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(42, 42, 42)
                .addGroup(card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(card5PanelLayout.createSequentialGroup()
                        .addComponent(card5PresjekAInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(card5DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(card5CalculateBtn))
                    .addComponent(card5PresjekBInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        card5PanelLayout.setVerticalGroup(
            card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card5PanelLayout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(card5PresjekAInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card5CalculateBtn)
                    .addComponent(card5DuljinaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(card5PresjekBInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cardMainPanel.add(card5Panel, "card5");

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        designNumberInput.setText(resourceMap.getString("designNumberInput.text")); // NOI18N
        designNumberInput.setName("designNumberInput"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        designNameInput.setText(resourceMap.getString("designNameInput.text")); // NOI18N
        designNameInput.setName("designNameInput"); // NOI18N

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        designIdInput.setText(resourceMap.getString("designIdInput.text")); // NOI18N
        designIdInput.setName("designIdInput"); // NOI18N

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        designClassInput.setText(resourceMap.getString("designClassInput.text")); // NOI18N
        designClassInput.setName("designClassInput"); // NOI18N

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        selectedMaterialComboBox.setFont(resourceMap.getFont("selectedMaterialComboBox.font")); // NOI18N
        selectedMaterialComboBox.setMaximumRowCount(10);
        selectedMaterialComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectedMaterialComboBox.setName("selectedMaterialComboBox"); // NOI18N
        selectedMaterialComboBox.setRenderer(comboBoxMaterialRenderer1);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${materials}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, selectedMaterialComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        selectedMaterialComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectedMaterialComboBoxItemStateChanged(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        materialPriceLabel.setFont(resourceMap.getFont("materialPriceLabel.font")); // NOI18N
        materialPriceLabel.setText(resourceMap.getString("materialPriceLabel.text")); // NOI18N
        materialPriceLabel.setName("materialPriceLabel"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        materialDensityLabel.setFont(resourceMap.getFont("materialDensityLabel.font")); // NOI18N
        materialDensityLabel.setText(resourceMap.getString("materialDensityLabel.text")); // NOI18N
        materialDensityLabel.setName("materialDensityLabel"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        calculateFieldOdabraniOblikName.setFont(resourceMap.getFont("calculateFieldOdabraniOblikName.font")); // NOI18N
        calculateFieldOdabraniOblikName.setText(resourceMap.getString("calculateFieldOdabraniOblikName.text")); // NOI18N
        calculateFieldOdabraniOblikName.setName("calculateFieldOdabraniOblikName"); // NOI18N

        resultCijenaLabel.setText(resourceMap.getString("resultCijenaLabel.text")); // NOI18N
        resultCijenaLabel.setName("resultCijenaLabel"); // NOI18N

        resultTezinaLabel.setText(resourceMap.getString("resultTezinaLabel.text")); // NOI18N
        resultTezinaLabel.setName("resultTezinaLabel"); // NOI18N

        resultsPanel.setName("resultsPanel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1-4", null, null, null},
                {"5-9", null, null, null},
                {"10", null, null, null},
                {"15", null, null, null},
                {"20", null, null, null},
                {"50", null, null, null},
                {"100", null, null, null}
            },
            new String [] {
                "Serija", "Posao za 50 kom", "P+ T + M", "P + T + M + G"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultsTable.setName("resultsTable"); // NOI18N
        jScrollPane2.setViewportView(resultsTable);

        resultWorkPriceInput.setName("resultWorkPriceInput"); // NOI18N
        resultWorkPriceInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                resultWorkPriceInputresultWorkPriceInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                resultWorkPriceInputresultWorkPriceInputKeyTyped(evt);
            }
        });

        restultMaterialPriceInput.setName("restultMaterialPriceInput"); // NOI18N
        restultMaterialPriceInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                restultMaterialPriceInputrestultMaterialPriceInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                restultMaterialPriceInputrestultMaterialPriceInputKeyTyped(evt);
            }
        });

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        povecanjeCijene.setName("povecanjeCijene"); // NOI18N

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(restultMaterialPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(povecanjeCijene, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25))
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(resultWorkPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(restultMaterialPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jLabel24)
                        .addComponent(povecanjeCijene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultWorkPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        comboBoxMaterialRenderer1.setText(resourceMap.getString("comboBoxMaterialRenderer1.text")); // NOI18N
        comboBoxMaterialRenderer1.setName("comboBoxMaterialRenderer1"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        designDateInput.setName("designDateInput"); // NOI18N

        jButton1.setAction(actionMap.get("SaveDesign")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("CloseNewDesignDialog")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cardMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(designNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(selectedMaterialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(designNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(materialDensityLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addGap(14, 14, 14)
                                .addComponent(materialPriceLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calculateFieldOdabraniOblikName)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(designIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(designClassInput, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resultTezinaLabel)
                                .addGap(23, 23, 23)
                                .addComponent(comboBoxMaterialRenderer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(resultCijenaLabel)))
                    .addComponent(jLabel23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(designDateInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(designNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(designNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(designIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(designClassInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(26, 26, 26)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel1)
                    .addComponent(materialPriceLabel)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedMaterialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(calculateFieldOdabraniOblikName)
                    .addComponent(materialDensityLabel))
                .addGap(18, 18, 18)
                .addComponent(cardMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(resultCijenaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxMaterialRenderer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resultTezinaLabel))
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(resultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(designDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectedMaterialComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectedMaterialComboBoxItemStateChanged
        if (selectedMaterialComboBox.getSelectedIndex() != -1) {
            HideResultTable();
            ResetAllFields(cardMainPanel);
            selectedMaterial = (Material) selectedMaterialComboBox.getSelectedItem();
            materialPriceLabel.setText(selectedMaterial.getEuroPerKg().toString());
            materialDensityLabel.setText(selectedMaterial.getMaterialDetails().getDensity().toString());
            calculateFieldOdabraniOblikName.setText(selectedMaterial.getCalculationForm().getCalculationFormName());
            SetPanelVisible(selectedMaterial.getCalculationForm().getIdCalculationForm());
        }
    }//GEN-LAST:event_selectedMaterialComboBoxItemStateChanged

        private void card5PresjekBInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card5PresjekBInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card5PresjekBInputKeyTyped

    private void card5DuljinaInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card5DuljinaInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card5DuljinaInputKeyTyped

    private void card5PresjekAInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card5PresjekAInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card5PresjekAInputKeyTyped

    private void card4DuljinaInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card4DuljinaInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card4DuljinaInputKeyTyped

    private void card4PresjekInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card4PresjekInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card4PresjekInputKeyTyped

    private void card3PresjekdInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card3PresjekdInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card3PresjekdInputKeyTyped

    private void card3DuljinaInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card3DuljinaInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card3DuljinaInputKeyTyped

    private void card3PresjekDInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card3PresjekDInputKeyTyped

        ValidateTextField(evt);     }//GEN-LAST:event_card3PresjekDInputKeyTyped

    private void card2DuljinaInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card2DuljinaInputKeyTyped
        ValidateTextField(evt);
    }//GEN-LAST:event_card2DuljinaInputKeyTyped

    private void card2PresjekInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card2PresjekInputKeyTyped
        ValidateTextField(evt);
    }//GEN-LAST:event_card2PresjekInputKeyTyped

    private void resultWorkPriceInputresultWorkPriceInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resultWorkPriceInputresultWorkPriceInputKeyReleased
        ValidateTextField(evt);
        FillTable();
    }//GEN-LAST:event_resultWorkPriceInputresultWorkPriceInputKeyReleased

    private void resultWorkPriceInputresultWorkPriceInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resultWorkPriceInputresultWorkPriceInputKeyTyped
        ValidateTextField(evt);

    }//GEN-LAST:event_resultWorkPriceInputresultWorkPriceInputKeyTyped

    private void restultMaterialPriceInputrestultMaterialPriceInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_restultMaterialPriceInputrestultMaterialPriceInputKeyReleased
        ValidateTextField(evt);
        FillTable();
    }//GEN-LAST:event_restultMaterialPriceInputrestultMaterialPriceInputKeyReleased

    private void restultMaterialPriceInputrestultMaterialPriceInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_restultMaterialPriceInputrestultMaterialPriceInputKeyTyped
        ValidateTextField(evt);
    }//GEN-LAST:event_restultMaterialPriceInputrestultMaterialPriceInputKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewDesignJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewDesignJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewDesignJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewDesignJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewDesignJDialog dialog = new NewDesignJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calculateFieldOdabraniOblikName;
    private javax.swing.JButton card2CalculateBtn;
    private javax.swing.JTextField card2DuljinaInput;
    private javax.swing.JPanel card2Panel;
    private javax.swing.JTextField card2PresjekInput;
    private javax.swing.JButton card3CalculateBtn;
    private javax.swing.JTextField card3DuljinaInput;
    private javax.swing.JPanel card3Panel;
    private javax.swing.JTextField card3PresjekDInput;
    private javax.swing.JTextField card3PresjekdInput;
    private javax.swing.JButton card4CalculateBtn;
    private javax.swing.JTextField card4DuljinaInput;
    private javax.swing.JPanel card4Panel;
    private javax.swing.JTextField card4PresjekInput;
    private javax.swing.JButton card5CalculateBtn;
    private javax.swing.JTextField card5DuljinaInput;
    private javax.swing.JPanel card5Panel;
    private javax.swing.JTextField card5PresjekAInput;
    private javax.swing.JTextField card5PresjekBInput;
    private javax.swing.JPanel cardMainPanel;
    private stefanpresentationlayer.ComboBoxMaterialRenderer comboBoxMaterialRenderer1;
    private javax.swing.JTextField designClassInput;
    private org.jdesktop.swingx.JXDatePicker designDateInput;
    private javax.swing.JTextField designIdInput;
    private javax.swing.JTextField designNameInput;
    private javax.swing.JTextField designNumberInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel materialDensityLabel;
    private javax.swing.JLabel materialPriceLabel;
    private javax.swing.JTextField povecanjeCijene;
    private javax.swing.JTextField restultMaterialPriceInput;
    private javax.swing.JLabel resultCijenaLabel;
    private javax.swing.JLabel resultTezinaLabel;
    private javax.swing.JTextField resultWorkPriceInput;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JTable resultsTable;
    private javax.swing.JComboBox selectedMaterialComboBox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public List<Material> getMaterials() {
        return materials;
    }

    public void setMaterials(List<Material> newMaterials) {
        materials = newMaterials;
    }

    private void SetPanelVisible(Integer index) {
        CardLayout c = (CardLayout) cardMainPanel.getLayout();
        switch (index) {
            case 1:
                c.show(cardMainPanel, "card2");
                break;
            case 2:
                c.show(cardMainPanel, "card3");
                break;
            case 3:
                c.show(cardMainPanel, "card4");
                break;
            case 4:
                c.show(cardMainPanel, "card5");
                break;

            default:
                break;
        }

    }

    private boolean IsMoreThenOneDotInField(JTextField field) {
        if (field.getText().contains(",")) {
            return true;
        } else {
            return false;
        }
    }

    private void ValidateTextField(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            super.processKeyEvent(evt);
        } else if ((",".indexOf(c) > -1) && (!IsMoreThenOneDotInField((JTextField) evt.getSource()))) {
            super.processKeyEvent(evt);
        } else {
            evt.consume();
            return;
        }
    }

    @Action
    public void IzracunajOkruglo() {

        if (!IsTextFieldOK()) {
            ShowEmptyFieldsMessage();
            return;
        }

        double presjek = Double.parseDouble(card2PresjekInput.getText().replace(",", "."));
        double duljina = Double.parseDouble(card2DuljinaInput.getText().replace(",", "."));
        BigDecimal resultWeight = BigDecimal.valueOf(Math.pow(presjek, 2)).multiply(BigDecimal.valueOf(Math.PI / 4)).multiply(
                selectedMaterial.getMaterialDetails().getDensity().divide(BigDecimal.valueOf(Math.pow(10, 6)), 10, RoundingMode.HALF_UP)).multiply(BigDecimal.valueOf(duljina));

        BigDecimal resultPrice = resultWeight.multiply(selectedMaterial.getEuroPerKg());

        SetResultLabel(resultPrice, resultWeight);
        ShowResultTable(resultPrice);
    }

    @Action
    public void IzracunajCijev() {
        if (!IsTextFieldOK()) {
            ShowEmptyFieldsMessage();
            return;
        }

        double presjekD = Double.parseDouble(card3PresjekDInput.getText().replace(",", "."));
        double presjekd = Double.parseDouble(card3PresjekdInput.getText().replace(",", "."));
        double duljina = Double.parseDouble(card3DuljinaInput.getText().replace(",", "."));

        BigDecimal resultWeight = BigDecimal.valueOf(Math.pow(presjekD, 2) - Math.pow(presjekd, 2)).multiply(BigDecimal.valueOf(Math.PI / 4)).multiply(
                BigDecimal.valueOf(duljina / Math.pow(10, 6))).multiply(selectedMaterial.getMaterialDetails().getDensity());

        BigDecimal resultPrice = resultWeight.multiply(selectedMaterial.getEuroPerKg());
        SetResultLabel(resultPrice, resultWeight);
        ShowResultTable(resultPrice);
    }

    private void SetResultLabel(BigDecimal price, BigDecimal weight) {
        resultCijenaLabel.setText(priceFormatter.format(price));
        resultTezinaLabel.setText(weightFormatter.format(weight));
    }

    @Action
    public void IzracunajSesterokut() {
        if (!IsTextFieldOK()) {
            ShowEmptyFieldsMessage();
            return;
        }

        double presjek = Double.parseDouble(card4PresjekInput.getText().replace(",", "."));
        double duljina = Double.parseDouble(card4DuljinaInput.getText().replace(",", "."));

        BigDecimal resultWeight = BigDecimal.valueOf(6.0).multiply(BigDecimal.valueOf(Math.pow(presjek / 2, 2))).multiply(
                BigDecimal.valueOf(1.0 / Math.sqrt(3))).multiply(BigDecimal.valueOf(duljina)).multiply(
                (selectedMaterial.getMaterialDetails().getDensity().divide(BigDecimal.valueOf(Math.pow(10, 6)), 10, RoundingMode.HALF_UP)));

        BigDecimal resultPrice = resultWeight.multiply(selectedMaterial.getEuroPerKg());
        SetResultLabel(resultPrice, resultWeight);
        ShowResultTable(resultPrice);
    }

    @Action
    public void IzracunajCetverokut() {
        if (!IsTextFieldOK()) {
            ShowEmptyFieldsMessage();
            return;
        }

        double presjekA = Double.parseDouble(card5PresjekAInput.getText().replace(",", "."));
        double presjekB = Double.parseDouble(card5PresjekBInput.getText().replace(",", "."));
        double duljina = Double.parseDouble(card5DuljinaInput.getText().replace(",", "."));

        BigDecimal resultWeight = BigDecimal.valueOf(presjekA * presjekB * duljina).multiply(selectedMaterial.getMaterialDetails().getDensity().divide(
                BigDecimal.valueOf(((double) Math.pow(10, 6)))));

        BigDecimal resultPrice = resultWeight.multiply(selectedMaterial.getEuroPerKg());
        SetResultLabel(resultPrice, resultWeight);
        ShowResultTable(resultPrice);
    }

    private boolean IsTextFieldEmpty() {
        for (int i = 0; i < fields.size(); i++) {
            if (fields.get(i).getText().length() == 0) {
                return true;
            }
        }
        return false;
    }

    private void ResetAllFields(JPanel panel) {
        Component[] components = panel.getComponents();
        for (int i = 0; i < components.length; i++) {
            if (components[i] instanceof JPanel) {
                ResetAllFields((JPanel) components[i]);
            } else if (components[i] instanceof JTextField) {
                ((JTextField) components[i]).setText("");
            }
        }
    }

    private void GetAllVisibleTextBoxes(JPanel panel) {
        Component[] components = panel.getComponents();
        for (int i = 0; i < components.length; i++) {
            if (components[i] instanceof JPanel) {
                GetAllVisibleTextBoxes((JPanel) components[i]);
            } else if ((components[i] instanceof JTextField) && components[i].isShowing()) {
                fields.add((JTextField) (components[i]));
            }
        }
    }

    private boolean IsTextFieldOK() {
        fields.clear();
        GetAllVisibleTextBoxes(cardMainPanel);
        if (IsTextFieldEmpty()) {
            return false;
        } else {
            return true;
        }
    }

    private void ShowEmptyFieldsMessage() {
        JOptionPane.showMessageDialog(null, "Popunite sva polja", "Greška", JOptionPane.ERROR_MESSAGE);
    }

    private void ShowResultTable(BigDecimal price) {
        restultMaterialPriceInput.setText(priceFormatter.format(price).toString());
        resultsPanel.setVisible(true);
    }

    private void HideResultTable() {
        resultCijenaLabel.setText("- -");
        resultTezinaLabel.setText("- -");
        resultWorkPriceInput.setText("");
        ClearResultTable();
        resultsPanel.setVisible(false);
    }

    private void FillTable() {
        if (IsBothFieldsFilled()) {
            ComputeTable();
        }
    }

    private boolean IsBothFieldsFilled() {
        if ((restultMaterialPriceInput.getText().length() != 0) && (resultWorkPriceInput.getText().length() != 0)) {
            return true;
        } else {
            return false;
        }
    }

    private void ComputeTable() {
        calculatedResults.clear();
        calculatedResultsSum.clear();
        resultsTable.setValueAt(resultWorkPriceInput.getText(), 5, 1);
        CalculateResult();
        for (int i = 0; i <= 6; i++) {
            resultsTable.setValueAt(priceFormatter.format(calculatedResults.get(i)), i, 2);
            if (selectedMaterial.getMaterialDetails().getNiklanje()) {
                resultsTable.setValueAt(priceFormatter.format(calculatedResultsSum.get(i)), i, 3);
            }
        }
    }

    private void CalculateResult() {
        List<Integer> pom = new ArrayList<Integer>();
        pom.add(13);
        pom.add(30);
        pom.add(200);
        pom.add(300);
        pom.add(400);
        pom.add(1000);
        pom.add(2000);

        for (int i = 0; i <= 6; i++) {
            double result = (1 / (Math.log(pom.get(i)) / Math.log(
                    Math.pow(1000, Double.parseDouble(resultWorkPriceInput.getText().replace(",", "."))))) +
                    Double.parseDouble(restultMaterialPriceInput.getText().replace(",", "."))) * 1.08;
            calculatedResults.add(result);
            result = result * 1.2;
            calculatedResultsSum.add(result);
        }
    }

    private void ClearResultTable() {
        for (int i = 0; i <= 6; i++) {
            resultsTable.setValueAt(" ", i, 1);
            resultsTable.setValueAt(" ", i, 2);
            resultsTable.setValueAt(" ", i, 3);
        }
    }

    @Action
    public void CloseNewDesignDialog() {
        this.dispose();
    }

    @Action
    public void SaveDesign() {
        if (!CheckInputField()) {
            ShowEmptyFieldsMessage();
        } else {
            try {
                DecimalFormatSymbols sym = new DecimalFormatSymbols();
                sym.setDecimalSeparator(',');
                DecimalFormat form = new DecimalFormat("");
                form.setDecimalFormatSymbols(sym);
                //Number num = form.parse("123,456");
                //float f = num.floatValue();
                //System.out.println(f);
                Design newDesign = new Design();
                //set values of new design
                newDesign.setDate(designDateInput.getDate());
                newDesign.setClassMark(designClassInput.getText().trim().toString());
                newDesign.setDesignNumber(designNumberInput.getText().trim().toString());
                newDesign.setMaterialId(selectedMaterial.getIdShape());
                newDesign.setName(designNameInput.getText().trim().toString());
                newDesign.setDesignIdentity(designIdInput.getText().trim().toString());
                //prices for each pcs
                if (selectedMaterial.getMaterialDetails().getNiklanje()) {
                    GetDesignPrices(newDesign, 3,form);

                } else {
                    GetDesignPrices(newDesign, 2,form);
                }

                DesignManager manager = new DesignManager();
                manager.SaveDesign(newDesign);
                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problem pri spremanju nacrta. " + e);
                return;
            }
        }
    }

    private boolean CheckInputField() {
        if ((designNameInput.getText().length() == 0) || (designNumberInput.getText().length() == 0) || (designIdInput.getText().length() == 0)
                || (designClassInput.getText().length() == 0) || ((!resultsPanel.isVisible()) || (resultWorkPriceInput.getText().length() == 0)
                || (restultMaterialPriceInput.getText().length() == 0))) {
            return false;
        } else {
            return true;
        }
    }

    private void GetDesignPrices(Design newDesign, int i, DecimalFormat form) throws ParseException {

        float inc = 1;
        if (povecanjeCijene.getText().length() != 0){
            inc += (Double.valueOf(povecanjeCijene.getText().trim().replace(",", "."))/100);
        }
        newDesign.setPcs1(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(0, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs5(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(1, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs10(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(2, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs15(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(3, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs20(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(4, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs50(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(5, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
        newDesign.setPcs100(BigDecimal.valueOf((double)(form.parse(resultsTable.getValueAt(6, i).toString()).floatValue())*inc).setScale(2, RoundingMode.HALF_UP));
    }

}