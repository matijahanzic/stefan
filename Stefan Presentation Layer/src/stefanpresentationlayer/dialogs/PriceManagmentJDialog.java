/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceManagmentJDialog.java
 *
 * Created on 09.02.2012., 20:25:20
 */
package stefanpresentationlayer.dialogs;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import stefan.business.MaterialManager;
import stefan.business.objects.Material;

/**
 *
 * @author Robert
 */
public class PriceManagmentJDialog extends javax.swing.JDialog {
    private List<Material> materials = new ArrayList<Material>();
    /** Creates new form PriceManagmentJDialog */
    public PriceManagmentJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Upravljanje Cijenama");
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        RefreshPriceTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        removePriceBtn = new javax.swing.JButton();
        editPriceBtn = new javax.swing.JButton();
        addPriceBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${materials}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${euroPerKg}"));
        columnBinding.setColumnName("Euro Per Kg");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stefanpresentationlayer.StefanPresentationLayerApp.class).getContext().getResourceMap(PriceManagmentJDialog.class);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable1.columnModel.title1")); // NOI18N

        removePriceBtn.setIcon(resourceMap.getIcon("removePriceBtn.icon")); // NOI18N
        removePriceBtn.setText(resourceMap.getString("removePriceBtn.text")); // NOI18N
        removePriceBtn.setName("removePriceBtn"); // NOI18N
        removePriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePriceBtnActionPerformed(evt);
            }
        });

        editPriceBtn.setIcon(resourceMap.getIcon("editPriceBtn.icon")); // NOI18N
        editPriceBtn.setText(resourceMap.getString("editPriceBtn.text")); // NOI18N
        editPriceBtn.setName("editPriceBtn"); // NOI18N
        editPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPriceBtnActionPerformed(evt);
            }
        });

        addPriceBtn.setIcon(resourceMap.getIcon("addPriceBtn.icon")); // NOI18N
        addPriceBtn.setText(resourceMap.getString("addPriceBtn.text")); // NOI18N
        addPriceBtn.setToolTipText(resourceMap.getString("addPriceBtn.toolTipText")); // NOI18N
        addPriceBtn.setName("addPriceBtn"); // NOI18N
        addPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPriceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removePriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removePriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removePriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePriceBtnActionPerformed
        int selectedIndex = jTable1.getSelectedRow();
        if(selectedIndex == -1){
            JOptionPane.showMessageDialog(null, "Odaberite što želite ukloniti","Greška",JOptionPane.ERROR_MESSAGE);
        }else{
            int materialId = materials.get(selectedIndex).getIdShape();
            MaterialManager manager = new MaterialManager();
            try {
                manager.DeleteMaterial(materialId);
                RefreshPriceTable();
            } catch (Exception e) {                            
                JOptionPane.showMessageDialog(null,e.toString(),"Greška",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removePriceBtnActionPerformed

    private void addPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPriceBtnActionPerformed
        NewPriceJDialog newPriceJDialog = new NewPriceJDialog(null, true);
        newPriceJDialog.setResizable(false);
        newPriceJDialog.setLocation(0, 50);
        newPriceJDialog.setVisible(true);
        RefreshPriceTable();
    }//GEN-LAST:event_addPriceBtnActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_DELETE){
            evt.consume();
            removePriceBtnActionPerformed(null);
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void editPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPriceBtnActionPerformed
      int selectedIndex = jTable1.getSelectedRow();
        if(selectedIndex == -1){
            JOptionPane.showMessageDialog(null, "Odaberite stavku","Greška",JOptionPane.ERROR_MESSAGE);
        }else{
            int materialId = materials.get(selectedIndex).getIdShape();
            EditPriceJDialog editDialog = new EditPriceJDialog(null, true, materialId);
            editDialog.setResizable(false);
            editDialog.setLocation(0, 50);
            editDialog.setVisible(true);
            RefreshPriceTable();
        }
    }//GEN-LAST:event_editPriceBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriceManagmentJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriceManagmentJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriceManagmentJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriceManagmentJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PriceManagmentJDialog dialog = new PriceManagmentJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPriceBtn;
    private javax.swing.JButton editPriceBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton removePriceBtn;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void RefreshPriceTable() {
        MaterialManager manager = new MaterialManager();
        setMaterials(manager.GetAll());
        this.firePropertyChange("materials", null, null);
    }

    /**
     * @return the materials
     */
    public List<Material> getMaterials() {
        return materials;
    }

    /**
     * @param materials the materials to set
     */
    public void setMaterials(List<Material> materials) {
        this.materials = materials;
    }
}
