package stefanpresentationlayer.dialogs;

import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import org.jdesktop.observablecollections.ObservableCollections;
import stefan.business.*;
import stefan.business.objects.*;
import stefanpresentationlayer.MyTableCellRenderer;

public class ImportDesignsFromExcelJDialog extends javax.swing.JDialog {

    private List<Design> designs = ObservableCollections.observableList(new ArrayList<stefan.business.objects.Design>());


    /** Creates new form DesignJDialog */
    public ImportDesignsFromExcelJDialog(java.awt.Frame parent, boolean modal, String filePath) {
        super(parent, modal);

        initComponents();
        setTitle("Uƒçitavanje Nacrta iz Excela");
       
        jXDatePickerDesignDate.setDate(new Date());
        jXDatePickerDesignDate.getMonthView().setFirstDayOfWeek(2);
        jXDatePickerDesignDate.getMonthView().setShowingWeekNumber(true); 
        jXDatePickerDesignDate.getMonthView().getSelectionModel().setMinimalDaysInFirstWeek(4); 
        
        designsJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
               MyTableCellRenderer rendrer = new MyTableCellRenderer();
        for (int i = 0; i < designsJTable.getModel().getColumnCount(); i++) { 
            designsJTable.getColumnModel().getColumn(i).setCellRenderer(rendrer);            
        }

       loadDesignsFromExcel(filePath);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        savejButton = new javax.swing.JButton();
        jXDatePickerDesignDate = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        designsJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonChangeTokarenje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stefanpresentationlayer.StefanPresentationLayerApp.class).getContext().getResourceMap(ImportDesignsFromExcelJDialog.class);
        savejButton.setText(resourceMap.getString("odaberiNacrtButton.text")); // NOI18N
        savejButton.setName("odaberiNacrtButton"); // NOI18N
        savejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savejButtonActionPerformed(evt);
            }
        });

        jXDatePickerDesignDate.setFormats(new String[] {"d.M.yyyy."});
        jXDatePickerDesignDate.setName("jXDatePickerDesignDate"); // NOI18N
        jXDatePickerDesignDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePickerDesignDateActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        designsJTable.setFont(resourceMap.getFont("designsJTable.font")); // NOI18N
        designsJTable.setName("designsJTable"); // NOI18N
        designsJTable.setRowHeight(18);
        designsJTable.setRowMargin(4);
        designsJTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${designs}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, designsJTable, "");
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${designNumber}"));
        columnBinding.setColumnName("Design Number");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${revision}"));
        columnBinding.setColumnName("Revision");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${designIdentity}"));
        columnBinding.setColumnName("Design Identity");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${classMark}"));
        columnBinding.setColumnName("Class Mark");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${niklanje}"));
        columnBinding.setColumnName("Niklanje");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${isTokarenje}"));
        columnBinding.setColumnName("Is Tokarenje");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs1}"));
        columnBinding.setColumnName("Pcs1");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs2}"));
        columnBinding.setColumnName("Pcs2");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs3}"));
        columnBinding.setColumnName("Pcs3");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs4}"));
        columnBinding.setColumnName("Pcs4");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs5}"));
        columnBinding.setColumnName("Pcs5");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs6}"));
        columnBinding.setColumnName("Pcs6");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs10}"));
        columnBinding.setColumnName("Pcs10");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs15}"));
        columnBinding.setColumnName("Pcs15");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs20}"));
        columnBinding.setColumnName("Pcs20");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs30}"));
        columnBinding.setColumnName("Pcs30");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs40}"));
        columnBinding.setColumnName("Pcs40");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs50}"));
        columnBinding.setColumnName("Pcs50");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs100}"));
        columnBinding.setColumnName("Pcs100");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs200}"));
        columnBinding.setColumnName("Pcs200");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs500}"));
        columnBinding.setColumnName("Pcs500");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pcs1000}"));
        columnBinding.setColumnName("Pcs1000");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        designsJTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                designsJTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(designsJTable);
        designsJTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        designsJTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable1.columnModel.title3")); // NOI18N
        designsJTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N
        designsJTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        designsJTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("designsJTable.columnModel.title21")); // NOI18N
        designsJTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        designsJTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTable1.columnModel.title0")); // NOI18N
        designsJTable.getColumnModel().getColumn(4).setPreferredWidth(80);
        designsJTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("designsJTable.columnModel.title4")); // NOI18N
        designsJTable.getColumnModel().getColumn(5).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("jTable1.columnModel.title1")); // NOI18N
        designsJTable.getColumnModel().getColumn(6).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("jTable1.columnModel.title5")); // NOI18N
        designsJTable.getColumnModel().getColumn(7).setPreferredWidth(50);
        designsJTable.getColumnModel().getColumn(7).setHeaderValue(resourceMap.getString("jTable1.columnModel.title10")); // NOI18N
        designsJTable.getColumnModel().getColumn(8).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(8).setHeaderValue(resourceMap.getString("jTable1.columnModel.title13")); // NOI18N
        designsJTable.getColumnModel().getColumn(9).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(9).setHeaderValue(resourceMap.getString("jTable1.columnModel.title15")); // NOI18N
        designsJTable.getColumnModel().getColumn(10).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(10).setHeaderValue(resourceMap.getString("jTable1.columnModel.title17")); // NOI18N
        designsJTable.getColumnModel().getColumn(11).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(11).setHeaderValue(resourceMap.getString("jTable1.columnModel.title20")); // NOI18N
        designsJTable.getColumnModel().getColumn(12).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(12).setHeaderValue(resourceMap.getString("jTable1.columnModel.title6")); // NOI18N
        designsJTable.getColumnModel().getColumn(13).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(13).setHeaderValue(resourceMap.getString("jTable1.columnModel.title9")); // NOI18N
        designsJTable.getColumnModel().getColumn(14).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(14).setHeaderValue(resourceMap.getString("jTable1.columnModel.title11")); // NOI18N
        designsJTable.getColumnModel().getColumn(15).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(15).setHeaderValue(resourceMap.getString("jTable1.columnModel.title14")); // NOI18N
        designsJTable.getColumnModel().getColumn(16).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(16).setHeaderValue(resourceMap.getString("designsJTable.columnModel.title16")); // NOI18N
        designsJTable.getColumnModel().getColumn(17).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(17).setHeaderValue(resourceMap.getString("jTable1.columnModel.title18")); // NOI18N
        designsJTable.getColumnModel().getColumn(18).setPreferredWidth(30);
        designsJTable.getColumnModel().getColumn(18).setHeaderValue(resourceMap.getString("jTable1.columnModel.title7")); // NOI18N
        designsJTable.getColumnModel().getColumn(19).setPreferredWidth(20);
        designsJTable.getColumnModel().getColumn(19).setHeaderValue(resourceMap.getString("jTable1.columnModel.title12")); // NOI18N
        designsJTable.getColumnModel().getColumn(20).setPreferredWidth(20);
        designsJTable.getColumnModel().getColumn(20).setHeaderValue(resourceMap.getString("jTable1.columnModel.title19")); // NOI18N
        designsJTable.getColumnModel().getColumn(21).setPreferredWidth(20);
        designsJTable.getColumnModel().getColumn(21).setHeaderValue(resourceMap.getString("jTable1.columnModel.title8")); // NOI18N
        designsJTable.getColumnModel().getColumn(22).setPreferredWidth(20);
        designsJTable.getColumnModel().getColumn(22).setHeaderValue(resourceMap.getString("designsJTable.columnModel.title22")); // NOI18N
        designsJTable.getColumnModel().getColumn(23).setPreferredWidth(20);
        designsJTable.getColumnModel().getColumn(23).setHeaderValue(resourceMap.getString("designsJTable.columnModel.title23")); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jButtonChangeTokarenje.setText(resourceMap.getString("jButtonChangeTokarenje.text")); // NOI18N
        jButtonChangeTokarenje.setName("jButtonChangeTokarenje"); // NOI18N
        jButtonChangeTokarenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeTokarenjeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXDatePickerDesignDate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonChangeTokarenje))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE))
                        .addComponent(savejButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jXDatePickerDesignDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChangeTokarenje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(savejButton)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void designsJTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_designsJTableKeyPressed
        int keyCode = evt.getKeyCode();
        if (keyCode == KeyEvent.VK_ENTER) {
            evt.consume();
        }
    }//GEN-LAST:event_designsJTableKeyPressed

private void jXDatePickerDesignDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerDesignDateActionPerformed
    for (int i = 0; i < designsJTable.getRowCount(); i++) {
        designsJTable.getModel().setValueAt(jXDatePickerDesignDate.getDate(), i, 7);
    } 
}//GEN-LAST:event_jXDatePickerDesignDateActionPerformed

private void savejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savejButtonActionPerformed
    
    try {
        
        DesignManager manager = new DesignManager();
        for (Design design : designs) {
            manager.SaveDesign(design);   
        }
    }
    catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Pogre≈°ka pri spremanju nacrta: " + e.toString(), "Gre≈°ka", JOptionPane.ERROR_MESSAGE);   
    }    
    
    this.dispose();
}//GEN-LAST:event_savejButtonActionPerformed

private void jButtonChangeTokarenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeTokarenjeActionPerformed
    int rowIndex = designsJTable.getSelectedRow();
    if (rowIndex == -1) {
        JOptionPane.showMessageDialog(null, "Prvo odaberite nacrt koji ≈æelite promijeniti.");
        return;
    }    

    Boolean oldValue = (Boolean)designsJTable.getModel().getValueAt(rowIndex, 6);
    Boolean newValue = !oldValue; //inverzija vrijednosti   
    designsJTable.getModel().setValueAt(newValue, rowIndex, 6); 
}//GEN-LAST:event_jButtonChangeTokarenjeActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable designsJTable;
    private javax.swing.JButton jButtonChangeTokarenje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerDesignDate;
    private javax.swing.JButton savejButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

 
    
     /**
     * @return the designs
     */
    public List<Design> getDesigns() {
        return designs;
    }

    /**
     * @param designs the designs to set
     */
    public void setDesigns(List<Design> designs) {
        this.designs = designs;
    }
    
    private void loadDesignsFromExcel(String filePath)
    {
        try{
            designs = ExcelManager.ReadDesignFromExcelFile(filePath);
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Datoteka nije pronaƒëena: " + e.toString(), "Gre≈°ka", JOptionPane.ERROR_MESSAGE);       
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Pogre≈°ka pri ƒçitanju podataka iz excela: " + e.toString(), "Gre≈°ka", JOptionPane.ERROR_MESSAGE);             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Pogre≈°ka pri ƒçitanju podataka iz excela: " + e.toString(), "Gre≈°ka", JOptionPane.ERROR_MESSAGE);   
        }       
        
        this.firePropertyChange("designs", null, null);        
    }   
    

}